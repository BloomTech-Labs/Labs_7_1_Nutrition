{"version":3,"sources":["components/landing.js","components/myrecipe.js","components/form.js","containers/recipelistview.js","containers/ingredientdetailview.js","components/login.js","components/register.js","components/logout.js","components/main.js","components/header.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Landing","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","token","react_default","a","createElement","alt","src","height","width","React","Component","Myrecipes","props","console","log","data","table","itemLayout","size","pagination","onChange","page","pageSize","dataSource","columns","title","dataIndex","FormItem","Form","Item","CustomForm","handleFormSubmit","event","requestType","ingId","preventDefault","cookTime","target","elements","CookTime","value","cookingMethod","CookingMethod","axios","post","then","res","catch","err","put","concat","_this2","es_form","onSubmit","label","input","name","placeholder","es_button","type","htmlType","btnText","RecipeList","recipes","componentDidMount","localStorage","getItem","history","push","length","myrecipe","components_form","IngredientDetail","ingredients","handleDelete","match","params","ingredientID","get","ingredient","JSON","stringify","setState","card","Login","handleLogin","password","_this$state","setItem","jwt","status","error","message","response","handleChange","bind","assertThisInitialized","e","defineProperty","style","background","padding","color","fontSize","bordered","login_FormItem","confirmPassword","email","register_FormItem","removeItem","Content","Layout","Main","Switch","Route","exact","path","component","Register","Logout","Header","Headers","handlelogout","className","menu","theme","mode","defaultSelectedKeys","lineHeight","key","Link","to","Footer","Footers","textAlign","App","header","main","footer","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6ade336.chunk.js","sourcesContent":["import React from 'react';\n\n//import { Avatar } from 'antd';\n\n\nclass Landing extends React.Component {\n   constructor() {\n       super();\n       this.state = {\n           username: '',\n           token: '',\n       }\n   }\n    render() {\n        return (\n            <div >\n                <h1>Don't eat that --->Choose Nutrition App</h1>\n                <img alt=\"Landing page image comes here\" src=\"../image/cooking-food-ginger.jpg\" height=\"400px\" width=\"500px\" />\n            </div>\n        )\n    }\n}\nexport default Landing;","import React from 'react';\nimport { List, Table, Card } from 'antd';\n//import Column from 'antd/lib/table/Column';\n//import ColumnGroup from 'antd/lib/table/ColumnGroup';\n\n\nconst Myrecipes = (props) => {\n  console.log(\"My Recipie :\",props.data);\n  //const data = props.data.map(v => { return v.CookingMethod});\n  //console.log(\"My recipe row:  \",data);\n  const columns = [ {\n    title: 'Suitable For Diet',\n    dataIndex: 'SuitableForDiet',\n  }, {\n    title: 'Recipe Category',\n    dataIndex: 'RecipeCategory',\n  }, {\n    title: 'Recipe Cuisine',\n    dataIndex: 'RecipeCuisine',\n  }, {\n    title: 'Cooking Time',\n    dataIndex: 'CookTime'\n   }, {\n    title: 'Recipe Yield',\n    dataIndex: 'RecipeYield',\n  }, {\n    title: 'Recipe Ingredients',\n    dataIndex: 'RecipeIngredients',\n  }, {\n    title: 'Recipe Instructions',\n    dataIndex: 'RecipeInstructions',\n  }]\n    return (\n        \n  // <List\n  //   itemLayout=\"vertical\"\n  //   size=\"large\"\n  //   pagination={{\n  //     onChange: (page) => {\n  //       console.log(page);\n  //     },\n  //     // pageSize: 3,\n  //   }}\n  //   dataSource={items}\n  //   renderItem={item => (\n  //     <List.Item>{item}</List.Item>\n  //     // <List.Item\n  //     //   // key={item.RecipeID}\n  //     //   // actions={[<IconText type=\"star-o\" text=\"156\" />, <IconText type=\"like-o\" text=\"156\" />, <IconText type=\"message\" text=\"2\" />]}\n  //     //   // extra={<img width={272} alt=\"\" src=\"\" />}\n  //     // >\n  //     //   <List.Item.Meta\n  //     //     abc=\"I am here\"\n  //     //     cooktime={<a href={item.href}>{item.CookTime}</a>}\n  //     //     cookingmethod={<a href={item.href}>{item.CookingMethod}</a>}\n  //     //   />\n  //     // </List.Item>\n  //   )}\n  // />\n  <div>\n  {/* <List\n  dataSource={data}\n    renderItem={item => (\n      <List.Item>{item}</List.Item>\n    )}\n  /> */}\n  <h1> Here you will see your saved recipes in a table form.</h1>\n  <Table\n  itemLayout=\"vertical\"\n  size=\"large\"\n  pagination={{\n        onChange: (page) => {\n          console.log(page);\n        },\n         pageSize: 3,\n      }}\n  dataSource={props.data}\n  columns={columns}\n  />\n  </div>\n    // <Card\n    //   title=\"Card title\"\n    //   extra={<a href=\"#\">More</a>}\n    //   style={{ width: 300 }}\n    // >\n    //   <p>Card content</p>\n    //   <p>Card content</p>\n    //   <p>Card content</p>\n    // </Card>\n )\n}\n\nexport default Myrecipes;","\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport axios from 'axios';\n\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n\t\thandleFormSubmit = (event, requestType, ingId) => {\n\t\t\tevent.preventDefault();\n\t\t\tconst cookTime= event.target.elements.CookTime.value;\n\t\t\tconst cookingMethod = event.target.elements.CookingMethod.value;\n\t\t\tconsole.log(\"line number 13\",cookingMethod,cookTime); //data gets caught\n\t\t\tswitch ( requestType ) {\n\t\t\t\tcase 'post':\n\treturn ( axios.post('http://127.0.0.1:8000/api/recipe/', {\n\n\t\t\t\t\t\tCookTime: cookTime,\n\t\t\t\t\t\tCookingMethod: cookingMethod\n\t\t\t\t\t})\n\t\t\t\t\t.then((res) => {console.log(\"success\");})\n          .catch(err => console.log(\"Form error at line 22\"))\n          );\n\t\t\n\t\t\t\tcase 'put':\n\t\t\t\t\treturn ( axios.put(`http://127.0.0.1:8000/api/recipe/${ingId}/`, {\n\t\t\t\t\t\tCookTime: cookTime,\n\t\t\t\t\t\tCookingMethod: cookingMethod\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(res => console.log(res))\n            .catch(err => console.log(\"error message:\",err))\n          );\n\t\t\t}\n \t\t}\n  render() {\n    return (\n      <div>\n        <Form onSubmit={(event) => this.handleFormSubmit(\n\t\t\t\t\tevent,\n\t\t\t\t\tthis.props.requestType,\n\t\t\t\t\tthis.props.ingId )}>\n          <FormItem label=\"Cook Time: \">\n            <Input name=\"CookTime\" placeholder=\"How long it will take?\" />\n          </FormItem>\n          <FormItem label=\"Cooking Method: \">\n            <Input name=\"CookingMethod\" placeholder=\"Baking, steaming, frying...\" />\n          </FormItem>\n\t\t\t\t\t<FormItem label=\"Recipe Category: \">\n            <Input name=\"RecipeCategory\" placeholder=\"What catogory this recipe comes under?\" />\n          </FormItem>\n\t\t\t\t\t<FormItem label=\"Recipe Cuisine: \">\n            <Input name=\"RecipeCuisine\" placeholder=\"So, what cusine is this?...\" />\n          </FormItem>\n\t\t\t\t\t<FormItem label=\"Recipe Instructions: \">\n            <Input name=\"RecipeInstructions\" placeholder=\"Step by step preperation instructions goes here...\" />\n          </FormItem>\n\t\t\t\t\t<FormItem label=\"Recipe Yield: \">\n            <Input name=\"RecipeYield\" placeholder=\"how many in number...\" />\n          </FormItem>\n\t\t\t\t\t<FormItem label=\"Suitable For Diet: \">\n            <Input name=\"SuitableForDiet\" placeholder=\"Suitable For what Diet...\" />\n          </FormItem><FormItem label=\"Nutrition \">\n            <Input name=\"Nutrition\" placeholder=\"Dropdown will show up\" />\n          </FormItem><FormItem label=\"Recipe Ingredients: \">\n            <Input name=\"RecipeIngredients\" placeholder=\"Ingredients goes here...\" />\n          </FormItem>\n          <FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">{this.props.btnText}</Button>\n          </FormItem>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default CustomForm;\n","import React from 'react';\nimport axios from 'axios';\nimport Myrecipes from '../components/myrecipe.js';\nimport CustomForm from '../components/form.js';\n\n\nclass RecipeList extends React.Component {\n    state = {\n        recipes: []\n\n    }\n    componentDidMount = () => {\n        \n        const username = localStorage.getItem('username');\n        console.log(\"In recipe list view username is:\",username);\n        if(username) {\n        //     axios.get(`http://127.0.0.1:8000/api/recipe/`)\n        // .then(res => {\n        //     console.log(\"Recipelist View data: \",res.data);\n        //     this.setState({\n        //         recipes: res.data\n        //     });\n        // })\n        // .catch(err => console.log(\"recipelist view error:\", err));\n        this.props.history.push('/recipe');\n\t\t\n        } else {\n            this.props.history.push('/login');\n        }\n        //const token = localStorage.getItem('token');\n        \n    }\n    render() {\n        if(this.state.recipes.length !== 0) {\n            // console.log(\"First row:  \",this.state.recipes[0].CookTime)\n            return (\n                <div> \n                    <h1> Hi, here are the list of recipes you have created.</h1> \n                    <Myrecipes data={this.state.recipes} />\n                    <br />\n                    <h2>Create recipe</h2>\n                    <CustomForm \n                        requestType=\"post\"\n                        ingId={null}\n                        btnText=\"Create\"/>\n                </div>\n                \n            )\n        }\n        else {\n            return (\n                <div>  \n                    <h1>Hey there! Looks like you need to create recipes. </h1>\n                    <h2>Create recipe</h2>\n                    <CustomForm \n                        requestType=\"post\"\n                        ingId={null}\n                        btnText=\"Create\"/>\n            </div>\n            )\n        }\n        \n    }\n}\nexport default RecipeList;","import React from 'react';\nimport axios from 'axios';\n\nimport { Card, Button } from 'antd';\nimport CustomForm from '../components/form.js';\n\nclass IngredientDetail extends React.Component {\n    state = {\n        ingredients: {}\n\n    }\n    componentDidMount() {\n        const ingId = this.props.match.params.ingredient;\n        console.log(JSON.stringify(ingId));\n        axios.get(`http://127.0.0.1.8000/api/${ingId}`)\n        .then(res => {\n            this.setState({\n                ingredients: res.data\n            });\n            console.log(res.data); \n        })\n\t\t.catch(err => console.log(\"Caught error\"));\n    }\n    handleDelete = (event) => {\n        const ingId = this.props.match.params.ingredientID;\n        axios.get(`http://127.0.0.1.8000/api/${ingId}`);\n        //this.props.history.push('/'); //react router dom package\n        //this.forceUpdate(); // Needs to fix. \n        \n    }\n    render() {\n        return (\n            <div>\n                <h1>Ingredient Modal view</h1>\n                <h2>under progress...</h2>\n                <Card CookTime={this.state.ingredients.CookTime}> \n\t\t\t\t    <p>{this.state.ingredients.CookingMethod}</p> \n                    {/* .details */}\n                </Card>\n                <CustomForm \n                    requestType=\"put\"\n                    ingId={this.props.match.params.ingId}\n                    btnText=\"Update\"/>\n                <form onSubmit={this.handleDelete}>\n                    <Button type=\"danger\" htmlType=\"submit\">Delete</Button>\n                </form>\n            </div>\n            \n        )\n    }\n}\nexport default IngredientDetail;","import React from 'react';\nimport { Form, Input, Button, Card } from 'antd';\n\n\nimport axios from 'axios';\nconst FormItem = Form.Item;\n\nclass Login extends React.Component {\n    constructor(props) {\n\t\t\t\tsuper(props);\n\t\t\t\tthis.state = {\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tmessage: 'Registered users can sign in here',\n\t\t\t\t};\n\t\t\t\tthis.handleChange = this.handleChange.bind(this);\n\t\t\t\tthis.handleLogin = this.handleLogin.bind(this);\n        //this.handleConflictSubmit = this.handleConflictSubmit.bind(this);        \n\t\t}\n\t\thandleChange(e) {\n\t\t\tthis.setState({\n\t\t\t\t\t[e.target.name]: e.target.value,\n\t\t\t});\n\t}\n    handleLogin = (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!this.state.username || !this.state.password) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t\tmessage: 'Please provide registered username and password',\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tusername,\n\t\t\t\t\t\tpassword,\n\t\t\t\t\t} = this.state;\n\t\n\t\t\t\t\tconsole.log(\"Username, password state: \",this.state);\n\t\t\t\t\t\n\t\t\t\t\tconsole.log(\"Username at local storage: \",localStorage.getItem('username'));\n\t\t\t\t\taxios.post(`http://127.0.0.1:8000/auth/login/`, {\n\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t})\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconsole.log(\"success\", res.data);\n\t\t\t\t\t\tlocalStorage.setItem('token', res.data.jwt);\n\t\t\t\t\t\tlocalStorage.setItem('username', this.state.username);\n\t\t\t\t\t\tconsole.log(\"just username:\", res.data.username);\n\t\t\t\t\t\tconsole.log(\"after successful axios call\", {status: res.status});\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.props.history.push('/recipe');\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tmessage: err.response.data.message,\n\t\t\t\t\t   });\n\t\t\t\t\t\t// (\"You need to register befoalertre you Sign in\");\n\t\t\t\t\t\tconsole.log(\"there was an error\", err);\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t\n        // this.Auth.login(this.state.username, this.state.password)\n        // .then(res => {\n        //     this.props.history.replace('/');\n        // })\n        // .catch(err => {\n        //     alert(err);\n        // })\n\t\t}\n\t\t\n    // componentWillMount() {\n    //     if(this.Auth.loggedIn())\n    //         //this.props.history.replace('/');\n    // }\n    render() {\n        return (\n\t\t\t\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\n\t\t\t\t<div style={{ color: '#990000', padding: '30px', fontSize: '30px' }}>{this.state.message}</div>\n                <Card title=\"Login\" bordered={false} style={{ width: 350}}>\n                <Form onSubmit={(event) => this.handleLogin(event)}>\n                    <FormItem label=\"Username : \">\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tname=\"username\" \n\t\t\t\t\t\t\tplaceholder=\"Username...\" \n\t\t\t\t\t\t\tonChange={this.handleChange}/>\n                    </FormItem>\n\t\t\t\t\t\t<FormItem label=\"Password : \">\n\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\tname=\"password\" \n\t\t\t\t\t\t\t\tplaceholder=\"Mix of 8 chars, numbers and symbols...\" \n\t\t\t\t\t\t\t\tonChange={this.handleChange}/>\n\t\t\t\t\t</FormItem>\n                    <FormItem>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\ttype=\"primary\" \n\t\t\t\t\t\t\thtmlType=\"submit\" \n\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n                    </FormItem>\n                </Form>\n\t\t\t\t</Card>\n            </div>\n        )\n    }\n}\nexport default Login;","import React from 'react';\nimport { Form, Input, Button, Card, Affix } from 'antd';\n\nimport axios from 'axios';\nconst FormItem = Form.Item;\n\nclass Login extends React.Component {\n    constructor(props) {\n\t\t\t\tsuper(props);\n\t\t\t\tthis.state = {\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tconfirmPassword: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tmessage: 'All fields are required.',\n\t\t\t\t};\n\t\t\t\tthis.handleChange = this.handleChange.bind(this);\n\t\t\t\t//this.handleNewUser = this.handleNewUser.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);       \n\t\t\t}\n\n\t\thandleChange(e) {\n\t\t\tthis.setState({\n\t\t\t\t\t[e.target.name]: e.target.value,\n\t\t\t});\n\t\t}\n\n    handleFormSubmit = (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst {\n\t\t\t\t\tusername,\n\t\t\t\t\tpassword,\n\t\t\t\t\tconfirmPassword,\n\t\t\t\t\temail,\n\t\t\t\t} = this.state;\n\n\t\t\tconsole.log(\"password:\", password);\n\t\t\tconsole.log(\"confirmPassword:\",confirmPassword );\n\t\t\tif(password !== confirmPassword)\n\t\t\t {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:\" Password mismatch\",\n\t\t\t   });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//if password comparison fails local state set to be empty. \n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tusername,\n\t\t\t\t\t\tpassword,\n\t\t\t\t\t\tconfirmPassword,\n\t\t\t\t\t\temail,\n\t\t\t\t\t});\n        \taxios.post('http://127.0.0.1:8000/auth/register/', {\n            \t\t\tusername,\n\t\t\t\t\t\tpassword,\n\t\t\t\t\t\temail,\n\t\t\t\t\t})\n        .then((res) => {\n\t\t\t\t\tconsole.log(\"success\", res.data);\n\t\t\t\t\tlocalStorage.setItem('username',username);\n\t\t\t\t\tlocalStorage.setItem('token', res.data.jwt);\n\t\t\t\t\t//localStorage.setItem('username', res.data.newUser.name);\n\t\t\t\t\tconsole.log(\"after successful axios call\", {status: res.status});\n\t\t\t\t\tthis.props.history.push('/recipe');\n\t\t\t\t})\n        .catch(err => {\n\t\t\t\t\t\n\t\t\t\t\tconsole.log(\"there was an error\", err, err.response);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmessage: err.response.data.message\n\t\t\t\t   });\n\n\t\t\t\t\t// this.setState({\n\t\t\t\t\t// \tpassword: '',\n\t\t\t\t\t// \tconfirmPassword: '',\n\t\t\t\t\t// });\n\t\t\t\t}\n    \t)\n    }\n\n    render() {\n        return (\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\n\t\t\t\t<div style={{ color: '#990000', padding: '30px', fontSize: '30px' }}>{this.state.message}</div>\t\n\t\t\t\t<Card title=\"Register \" bordered={false} style={{ width: 350}}>\n                <Form onSubmit={(event) => this.handleFormSubmit(event)}>\n                    <FormItem label=\"Username : \">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"username\" \n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Username...\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}/>\n                    </FormItem>\n\t\t\t\t\t<FormItem label=\"Password : \">\n\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\tname=\"password\" \n\t\t\t\t\t\t\t\tplaceholder=\"Mix of 8 chars, numbers and symbols...\" \n\t\t\t\t\t\t\t\tonChange={this.handleChange}/>\n                    </FormItem>\n                    <FormItem label=\"Confirm Password : \">\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tname=\"confirmPassword\" \n\t\t\t\t\t\t\tplaceholder=\"Same as above...\" \n\t\t\t\t\t\t\tonChange={this.handleChange}/>\n                    </FormItem>\n\t\t\t\t\t<FormItem label=\"Email : \">\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tname=\"email\" \n\t\t\t\t\t\t\tplaceholder=\"Type in valid email...\" \n\t\t\t\t\t\t\tonChange={this.handleChange}/>\n                    </FormItem>\n                    <FormItem>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\ttype=\"primary\" \n\t\t\t\t\t\t\thtmlType=\"submit\" \n\t\t\t\t\t\t\t// onClick={this.handleNewUser}\n\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t</Button>\n                    </FormItem>\n                </Form>\n\t\t\t\t</Card>\n            </div>\n        )\n    }\n}\nexport default Login;","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\n\nclass Login extends React.Component {\n    constructor() {\n        super();  \n    }\n    \n    componentWillMount() {\n\t    localStorage.removeItem('username','');\n        localStorage.removeItem('token', '');\n        this.props.history.push('/');\n    }\n    render() {\n        return (\n            <div>\n                <h2> You have successfully logged out.  </h2>\n                <br />\n                <h2> Do you want to sign in? </h2>\n                <div>\n                        <Button type=\"primary\" htmlType=\"submit\"> Back to home </Button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Login;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Landing from '../components/landing.js';\nimport RecipeList from '../containers/recipelistview.js';\nimport IngredientDetail from '../containers/ingredientdetailview.js';\nimport Login from '../components/login.js';\nimport Register from '../components/register.js';\nimport Logout from '../components/logout.js';\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\nconst Main = () => (\n    <Content style={{ padding: '0 50px' }}>\n        <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route path='/recipe' component={RecipeList} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route path='/ing/:ingredientid' component={IngredientDetail} />\n            <Route path='/logout' component={Logout} />\n        </Switch>\n    </Content>\n\n)\n\nexport default Main;","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom'; \n\nconst { Header } = Layout;\nclass Headers extends React.Component {\n  handlelogout = () => {\n    this.props.history.push('/');\n    localStorage.removeItem('username','');\n    localStorage.removeItem('token', '');\n    \n  }\n  render () {\n    const username = localStorage.getItem('username');\n  if(username) {\n    return (\n      <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['2']}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"1\">Hi {username}</Menu.Item>\n            <Menu.Item key=\"3\"><Link to={\"/logout\"}>Logout</Link></Menu.Item>\n            {/* onClick={this.handlelogout} */}\n          </Menu>\n        </Header>\n    )\n  } else {\n      return (\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['2']}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"1\"><Link to={\"/login\"}>Sign In</Link></Menu.Item>\n            <Menu.Item key=\"2\"><Link to={\"/register\"}>Sign Up</Link></Menu.Item>\n          </Menu>\n        </Header>\n      )\n  }\n}\n  \n}\n\nexport default Headers;","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link } from 'react-router-dom'; \n\nconst { Footer } = Layout;\nconst Footers = () => (\n    <Footer style={{ textAlign: 'center', background: '#646404' }}>\n         \tNutrition Team\n    </Footer>\n)\nexport default Footers;","import React from 'react';\nimport Main from './components/main.js';\nimport Headers from './components/header.js';\nimport Footers from './components/footer.js';\n\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div> \n        <Headers />\n        <Main />\n        <Footers />\n     </div>\n    )\n  } \n}\n\nexport default App;\n     \n     \n      \n    ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'antd/dist/antd.css';  // from ant.design usage\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <Router>\n        <div>\n            <App /> \n        </div>\n    </Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}